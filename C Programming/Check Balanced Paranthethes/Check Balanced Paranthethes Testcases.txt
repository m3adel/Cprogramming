					Backlog
*****************************************************************************
*First part
*****************************************************************************
Test your stack	Follow the below algorithm to test your stack
1. Create an empty stack
2. Push 5 different characters to the stack
3. Print all stack data
4. Pop one character from the stack
5. Print the stack's top
6. Print all stack data
7. Push another 7 different characters to the stack
8. Print the stack's top
9. Print all stack data
10. Pop 4 characters from the stack
11. Print the stack's top 
12. Print all stack data
13. Pop 7 more times from the stack
14. Print the stack's top 
15. Print all stack data
*****************************************************************************
*Second part
*****************************************************************************
Test your algorithm	Follow the below algorithm to test your algorithm
1. Test Case 1
- Ask the user for an expression
- Write this expression {(2+3)}
2. Test Case 2
- Ask the user for an expression
- Write this expression {((2+3)}
3. Test Case 3
- Ask the user for an expression
- Write this expression [(2+3)]
4. Test Case 4
- Ask the user for an expression
- Write this expression {(2+3)/((3+3)*(15-10))}
5. Test Case 5
- Ask the user for an expression
- Write this expression (2+3)/((3+3)*(15-10))
6. Test Case 6
- Ask the user for an expression
- Write this expression {{2+3)/((3+3)*(15-10)))
7. Test Case 7
- Ask the user for an expression
- Write this expression {(2+3(/((3+3)*(15-10))}
8. Test Case 8
- Ask the user for an expression
- Write this expression {(2+3)/((3+3(*)15-10))}
9. Test Case 9
- Ask the user for an expression
- Write this expression })2+3)/((3+3)*(15-10))}
10. Test Case 10
- Ask the user for an expression
- Write this expression {(2+3)/(<3+3>*(15-10))}
